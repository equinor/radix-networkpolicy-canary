apiVersion: radix.equinor.com/v1
kind: RadixApplication
metadata:
  name: radix-networkpolicy-canary
spec:
  build:
    useBuildKit: true
  environments:
    - name: egressrulestopublicdns
      build:
        from: main
      egress:
        allowRadix: false
        rules:
        - destinations:
            - "1.0.0.1/32" #cloudflare
            - "1.1.1.1/32" #cloudflare
            - "8.8.8.8/32" #google
            - "8.8.4.4/32" #google
          ports:
            - port: 53
              protocol: TCP
            - port: 53
              protocol: UDP
    - name: oauthdenyall
      build:
        from: main
      egress:
        allowRadix: false
    - name: allowradix
      build:
        from: main
      egress:
        allowRadix: true
  jobs:
    - name: myjob
      readOnlyFileSystem: true
      src: ./jobsrc
      schedulerPort: 9000
      timeLimitSeconds: 1
      runtime:
        architecture: arm64
      resources:
        requests:
          cpu: "10m"
          memory: "10M"
        limits:
          cpu: "10m"
          memory: "10M"
  components:
    - name: redis
      src: ./redis
      secrets:
        - REDIS_PASSWORD
      ports:
        - name: redis
          port: 6379
      runtime:
        architecture: arm64
      resources:
        requests:
          cpu: 20m
          memory: 20M
      horizontalScaling:
        maxReplicas: 1
        minReplicas: 0
        triggers:
          - name: cron
            cron:
              timezone: Europe/Oslo
              start: 0 7 * * 1-5 # 07:00 Monday - Friday
              end: 0 18 * * 1-5 # 17:00 Monday - Friday
              desiredReplicas: 1
      environmentConfig:
        - environment: oauthdenyall
          replicas: 1
        - environment: egressrulestopublicdns
          enabled: false
        - environment: allowradix
          enabled: false
    - name: web
      readOnlyFileSystem: true
      src: "."
      secrets:
        - NETWORKPOLICY_CANARY_PASSWORD
      monitoring: true
      ports:
        - name: http
          port: 5000
      publicPort: http
      variables:
        JOB_SCHEDULER_PORT: "9000"
        LISTENING_PORT: "5000"
        LOG_LEVEL: "info"
        PRETTY_LOG: "false"
      runtime:
        architecture: arm64
      resources:
        requests:
          cpu: "10m"
          memory: "20M"
        limits:
          cpu: "10m"
          memory: "20M"
      horizontalScaling:
        maxReplicas: 1
        minReplicas: 0
        triggers:
          - name: cron
            cron:
              timezone: Europe/Oslo
              start: 0 7 * * 1-5 # 07:00 Monday - Friday
              end: 0 18 * * 1-5 # 17:00 Monday - Friday
              desiredReplicas: 1
      environmentConfig:
        - environment: oauthdenyall
          authentication:
            oauth2:
              clientId: 46e3125d-4465-4217-9a71-20b3dc91d9f4
              scope: openid profile email offline_access
              setXAuthRequestHeaders: true
              setAuthorizationHeader: true
              sessionStoreType: redis
              redisStore:
                connectionUrl: redis://redis:6379
